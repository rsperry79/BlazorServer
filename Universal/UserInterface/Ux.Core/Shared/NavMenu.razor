@inherits LayoutComponentBase

@using Telerik.Blazor
@using Telerik.Blazor.Components

@namespace Ux.Core.Shared

<div class="custom-toolbar">

    <TelerikButton OnClick="@ToggleDrawer" Icon="menu" Class="k-flat hamburger"></TelerikButton>

    <TelerikDrawer @ref="@Drawer" Data="@NavigablePages" @bind-Expanded="@Expanded" MiniMode="true" Mode="@DrawerMode.Push">
        <Content>
            @Body
        </Content>
    </TelerikDrawer>
</div>


@code {
    public TelerikDrawer<DrawerItem> Drawer { get; set; }

    private bool expanded;

    public bool Expanded
    {
        get
        {
            if (!localStorageSettings.PinMenu)
            {
                return expanded;
            }
            else
            {
                return true;
            }
        }

        set
        {
            if (!localStorageSettings.PinMenu)
            {
                expanded = value;
            }
        }
    }

    List<DrawerItem> NavigablePages { get; set; } = new List<DrawerItem> { new DrawerItem { Text = "Hitapp", Url = "/hitapp", Icon = "play-sm" }, new DrawerItem { IsSeparator = true }, new DrawerItem { Text = "Instructions", Url = "/instructions", Icon = "info-circle" },  new DrawerItem { IsSeparator = true }, new DrawerItem { Text = "Tips", Url = "/tips", Icon = "eye" }, new DrawerItem { IsSeparator = true }, new DrawerItem { Text = "Settings", Url = "/settings", Icon = "gear" }, };

    public Task ToggleDrawer() => Drawer.ToggleAsync();

    public class DrawerItem
    {
        public string Text { get; set; }

        public string Url { get; set; }

        public string Icon { get; set; }

        public bool IsSeparator { get; set; }
    }

    protected override void OnInitialized()
    {
        localStorageSettings.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        localStorageSettings.OnChange -= StateHasChanged;
    }
}

<style>


</style>
